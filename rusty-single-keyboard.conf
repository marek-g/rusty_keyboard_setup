# Keymapper project page: https://github.com/houmain/keymapper
#
# Different ideas:
# - https://www.reddit.com/r/ErgoMechKeyboards/comments/1ghemwu/timeless_home_row_mods_focused_on_convenient/
# - godmode w Emacs lepsze od sticky keys, bo automatycznie się wyłącza
# - evilmode w Emacs (dla mnie wygodniejsze od godmode)
# - Meow's keypad mode
# - https://github.com/jyp/boon
# - http://xahlee.info/emacs/misc/xah-fly-keys.html
# - http://xahlee.info/emacs/emacs/ergonomic_emacs_keybinding.html
#
# - hydra
# - https://github.com/meedstrom/deianira - hydra everywhere
#
# - swap lalt with lctrl?
#
# - one hand keyboard? https://inkeys.wiki/en/keymaps/taipo
#   (Artsey? Ardux?)
# - Miryoku: https://github.com/manna-harbour/miryoku

@include "switch-layouts.conf"

[system = "Linux"]
ContextActive >> $(notify-send 'Rusty Single Keyboard Mode ON') ^ $(notify-send 'Rusty Single Keyboard Mode OFF')

[system = "Windows"]
ContextActive >> $(msg * Rusty Single Keyboard Mode ON) ^ $(msg * Rusty Single Keyboard Mode OFF)

[default]

###############################################################################
#
# Virtual keys
#
###############################################################################

#
# thumb keys defined as virtual keys
#
# as a workaround to a bug in keymapper (as of version 4.9.1)
# when using modifiers and two keyboards,
# see: https://github.com/houmain/keymapper/issues/207
#

ThumbLeft1 = Virtual10
ThumbLeft2 = Virtual11
ThumbLeft3 = Virtual12
ThumbLeft4 = Virtual13

ThumbRight1 = Virtual14
ThumbRight2 = Virtual15
ThumbRight3 = Virtual16
ThumbRight4 = Virtual17

#
# Virtual Modifiers
#

ModifiersSelected = Virtual31
AltLock = Virtual32
ShiftLock = Virtual33
CtrlLock = Virtual34
WinLock = Virtual35

#
# notify user about turning SplitKeyboardMode on / off
#

[system = "Linux"]
ContextActive >> $(notify-send 'Rusty Single Keyboard Mode ON') ^ $(notify-send 'Rusty Single Keyboard Mode OFF')
#SplitKeyboardMode >> $(hid_ctrl rk618 custom-colors 0F0:2 040:13 F00 040:5 00F:4 0F0:2 FF0:2 000:6 0F0:7 040:5 0F0:3 000:6 0F0:7 040 F00:4 040 FF0:2 000:6 0F0:7 040:6 FF0:2 000:6 0F0:7 FF0:2 F00:1 FF0:5 000:6 0F0:6) ^ $(hid_ctrl rk618 solid-color 0 255 0)
#SplitKeyboardMode >> $(hid_ctrl rk618 custom-colors 0F0:1) ^ $(hid_ctrl rk618 solid-color 0 255 0)
#SplitKeyboardMode >> $(hid_ctrl rk618 solid-color 255 0 0) ^ $(hid_ctrl rk618 solid-color 0 255 0)

[system = "Windows"]
ContextActive >> $(msg * Rusty Single Keyboard Mode ON) ^ $(msg * Rusty Single Keyboard Mode OFFF)

[default]

###############################################################################
#
# SplitKeyboardMode
# Two keyboards. One for the left hand. One for the right hand.
#
# SingleKeyboardNode
# One keyboard.
#
###############################################################################

#
# define thumb clusters
#

AltLeft >> ThumbLeft2 ^ ThumbLeft2
AltRight >> ThumbRight1 ^ ThumbRight1

[stage]

Ext = CapsLock
Modifiers = Space
SymbolsLayer = ThumbLeft2
ThumbRight1 >> AltRight

[stage]

#
# AltRight symbols
#

AltRight{U} >> "["
AltRight{I} >> "]"
AltRight{D} >> "{"
AltRight{F} >> "}"
AltRight{J} >> "("
AltRight{K} >> ")"

AltRight{Space} >> "_"
AltRight{Q} >> "~"
AltRight{Slash} >> "$"

[default]

#
# numeric layer
#
# inspired by: https://getreuer.info/posts/keyboards/symbol-layer/index.html
# but moved parentheses to RAlt and placed number pad instead
#

[modifier="SymbolsLayer"]
CapsLock >> Enter
Q >> "`"
W >> "<"
E >> ">"
R >> '"'
T >> "."

A >> "!"
S >> "-"
D >> "+"
F >> "="
G >> "#"

ShiftLeft >> ":"

Z >> "^"
X >> "/"
C >> "*"
V >> Backslash
B >> "'"

Y >> "&"
U >> "7"
I >> "8"
O >> "9"
P >> "%"

H >> "|"
J >> "4"
K >> "5"
L >> "6"
Semicolon >> "?"

N >> "0"
M >> "1"
Comma >> "2"
Period >> "3"
Slash >> "@"

[default]

#
# Modifiers key
#

#Space{Any !Any} >> X

#[modifier="SplitKeyboardMode"]
#[modifier="SingleKeyboardMode"]
#Modifiers{Any !Any} >> ShiftLeft{Any}

#Modifiers{A !A} >> X
#Space{Any !Any} >> ShiftLeft{Any}

#Modifiers{Any !Any} >> X
#Modifiers{A !A} >> X

[modifier="!ModifiersSelected"]
Modifiers{(S D F G) !S} >> AltLock ShiftLock CtrlLock WinLock ^ ModifiersSelected
Modifiers{(S D F) !S} >> AltLock ShiftLock CtrlLock ^ ModifiersSelected
Modifiers{(S D G) !S} >> AltLock ShiftLock WinLock ^ ModifiersSelected
Modifiers{(D F G) !D} >> ShiftLock CtrlLock WinLock ^ ModifiersSelected
Modifiers{(S D) !S} >> AltLock ShiftLock ^ ModifiersSelected
Modifiers{(S F) !S} >> AltLock CtrlLock ^ ModifiersSelected
Modifiers{(S G) !S} >> AltLock WinLock ^ ModifiersSelected
Modifiers{(D F) !D} >> ShiftLock CtrlLock ^ ModifiersSelected
Modifiers{(D F) !D} >> ShiftLock CtrlLock ^ ModifiersSelected
Modifiers{(D G) !D} >> ShiftLock WinLock ^ ModifiersSelected
Modifiers{(F G) !F} >> CtrlLock WinLock ^ ModifiersSelected
Modifiers{S !S} >> AltLock ^ ModifiersSelected
Modifiers{D !D} >> ShiftLock ^ ModifiersSelected
Modifiers{F !F}>> CtrlLock ^ ModifiersSelected
Modifiers{G !G}>> WinLock ^ ModifiersSelected

[modifier="Modifiers"]
ContextActive >> ^ !ModifiersSelected !AltLock !ShiftLock !CtrlLock !WinLock
AltLock >> AltLeft
ShiftLock >> ShiftLeft
CtrlLock >> ControlLeft
WinLock >> MetaLeft

#[modifier="Modifiers !ModifiersSelected"]
#S >> AltLock ^ ModifiersSelected
#D >> ShiftLock ^ ModifiersSelected
#F >> CtrlLock ^ ModifiersSelected
#G >> WinLock ^ ModifiersSelected

[default]

#
# Extend key
#

Ext >>

#Ext{F} !2000ms >> "Control" ^ "!Control"

#Ext{(D F)} !2000ms Any   >> ShiftLeft{ControlRight{Any}}
#Ext{F} !2000ms Any   >> ControlRight{Any}
#Ext{D} !2000ms Any   >> ShiftLeft{Any}

# modifiers
Ext{S}    >> Alt
Ext{D}    >> Shift
Ext{F}    >> Control

# cursor keys
Ext{I}    >> ArrowUp
Ext{K}    >> ArrowDown
Ext{J}    >> ArrowLeft
Ext{L}    >> ArrowRight
Ext{U}    >> Home
Ext{O}    >> End
Ext{Y}    >> PageUp
Ext{H}    >> PageDown

Ext{Semicolon} >> Backspace
Ext{Q}         >> Escape
Ext{P}         >> Delete

Ext{X}               >> edit_cut
Ext{C}               >> edit_copy
Ext{V}               >> edit_paste
Ext{E}               >> find
Ext{Z}               >> edit_undo
(Ext Shift){Z}       >> edit_redo
#Ext{F}               >> find

# the Ext modifier together with other keys should have no effect
Ext{Any}  >>

#
# default mappings for abstract commands
#

edit_copy            >> Control{C}
edit_cut             >> Control{X}
edit_paste           >> Control{V}
edit_undo            >> Control{Z}
edit_redo            >> Control{Y}
find                 >> Control{F}

@include "emacs.conf"
